<?php
/**
 * Created by PhpStorm.
 * User: zhangzenan
 * Date: 2018/2/15
 * Time: 12:26
 */

namespace app\controllers;


use app\filters\UserFilter;
use app\models\ProductCollection;
use app\models\Products;
use common\services\ProductService;
use common\services\RedisService;
use yii\db\Exception;

class UserProductController extends BaseController
{
    /** @var ProductService $productService*/
    private $productService = null;

    public function behaviors()
    {
        return [
            [
                'class' => UserFilter::className(),
            ]
        ];
    }

    public function init()
    {
        $this->productService = new ProductService();
        parent::init(); // TODO: Change the autogenerated stub
    }

    /**
     * 添加商品(图片为前端已经上传到七牛的url地址)
     */
    public function actionPublishProduct()
    {
        $params = $this->postData;
        $uid = RedisService::getUidByToken($this->token);

        $transaction = Products::getDb()->beginTransaction();
        try {
            //创建商品总览记录
            $productId = $this->productService->createProduct($uid, $params);

            //创建商品细节记录
            $this->productService->createProductDetail($productId, $params['num']);

        } catch (Exception $e) {
            $transaction->rollBack();
            return $this->renderJSON($e->getCode(), $e->getMessage());
        }
        $transaction->commit();
        return $this->renderJSON(0, 'ok');
    }

    /**
     * 收藏商品
     */
    public function actionCollectProducts()
    {
        $params = $this->postData;
        $uid = RedisService::getUidByToken($this->token);
        $productId = $params['pid'];

        if (!$productId || !$uid) {
            return $this->renderJSON(-1000, '参数错误');
        }

        $productCollection = new ProductCollection();
        $productCollection->FuiUserId = $uid;
        $productCollection->FuiProductId = $productId;
        $productCollection->FuiCreateTime = time();
        if (!$productCollection->save()) {
            return $this->renderJSON(-1001, '收藏失败');
        }

        return $this->renderJSON(0, 'ok');
    }

}