<?php
/**
 * Created by PhpStorm.
 * User: zhangzenan
 * Date: 2017/9/7
 * Time: 23:45
 */

namespace app\controllers;


use app\models\Address;

class OrderController extends BaseController
{
    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
    }

    public function actionAddAddress()
    {
        $params = \Yii::$app->request->post();
        if (empty($params['uid'])) {
            return $this->renderJSON(-1, '无效用户名');
        }
        $oldAddress = Address::find()->select('*')
            ->where(['FuiUserId' => $params['uid'], 'FuiTag' => 0, 'FuiStatus' => 0])->one();
        $address = new Address();
        if (count($oldAddress) == 0) {
            $address->FuiTag = 0;
        } else {
            $address->FuiTag = 1;
        }
        $address->FuiUserId = $params['uid'];
        $address->FstrMobile = $params['mobile'];
        $address->FstrAddress = $params['address'];
        $address->FstrProvince = $params['province'];
        $address->FstrCity = $params['city'];
        $address->FstrTown = $params['town'];
        if ($address->save()) {
            return $this->renderJSON(0, '添加成功');
        }
        return $this->renderJSON(-2, '添加失败');
    }

    public function actionModifyAddress()
    {
        $params = \Yii::$app->request->post();
        if (empty($params['addressId'])) {
            return $this->renderJSON(-1, '无效参数');
        }
        if (empty($params['uid'])) {
            return $this->renderJSON(-2, '无效用户名');
        }
        $transaction = Address::getDb()->beginTransaction();
        try {
            $oldAddress = Address::findOne(['FuiUserId' => $params['uid'], 'FuiTag' => 0, 'FuiStatus' => 0]);
            if (!empty($oldAddress)) {
                $oldAddress->FuiTag = 1;
                if (!$oldAddress->save()) {
                    throw new \Exception('修改旧地址失败', -3);
                }
            }
            $newAddress = Address::findOne(['FuiId' => $params['addressId']]);
            $newAddress->FuiTag = 0;
            if (!$newAddress->save()) {
                throw new \Exception('修改新地址失败', -4);
            }
            $transaction->commit();
            return $this->renderJSON(0, '修改成功');
        } catch (\Exception $e) {
            $transaction->rollBack();
            return $this->renderJSON($e->getCode(), $e->getMessage());
        }
    }

    public function actionDeleteAddress()
    {
        $params = \Yii::$app->request->post();
        if (empty($params['addressId'])) {
            return $this->renderJSON(-1, '无效参数');
        }
        if (empty($params['uid'])) {
            return $this->renderJSON(-2, '无效用户名');
        }
        $address = Address::findOne(['FuiUserId' => $params['uid'], 'FuiId' => $params['uid']]);
        if (empty($address)) {
            return $this->renderJSON(-3, '非法请求');
        }
        $address->FuiStatus = 1;
        if ($address->save()) {
            return $this->renderJSON(0, '删除成功');
        }
        return $this->renderJSON(-4, '删除失败');
    }

    public function actionGetAddressByUserId()
    {
        $uid = \Yii::$app->request->post('uid');
        if (empty($uid) || !is_int(intval($uid))) {
            return $this->renderJSON(-1, '无效用户名');
        }
        $address = Address::find()->select('*')
            ->where(['FuiUserId' => $uid, 'FuiStatus' => 0])->all();
        if (empty($address)) {
            return $this->renderJSON(-2, '不存在地址');
        }
        return $this->renderJSON(0, 'success', $address);
    }
}